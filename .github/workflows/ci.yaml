name: Continuous Integration
on:
  push:
  workflow_dispatch:
    inputs:
      upload_artifacts:
        description: "Upload artifacts"
        type: boolean
        required: true
        default: true
env:
  CARGO_TERM_COLOR: always
jobs:
  build_and_test:
    name: CI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
      fail-fast: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, rust-src, clippy
      - name: Build
        run: cargo build --release --verbose
      - name: Download `testgen-hs`
        shell: bash
        run: |
          set -euo pipefail
          version="10.1.2.1"
          case "${{ matrix.os }}" in
            macos-latest)
              target=testgen-hs-"$version"-aarch64-darwin.tar.bz2
              curl -fsSL -O https://github.com/input-output-hk/testgen-hs/releases/download/"$version"/"$target"
              tar -xjf "$target"
              ./testgen-hs/testgen-hs --version
              ;;
            ubuntu-latest)
              target=testgen-hs-"$version"-x86_64-linux.tar.bz2
              curl -fsSL -O https://github.com/input-output-hk/testgen-hs/releases/download/"$version"/"$target"
              tar -xjf "$target"
              ./testgen-hs/testgen-hs --version
              ;;
            windows-latest)
              target=testgen-hs-"$version"-x86_64-windows.zip
              curl -fsSL -O https://github.com/input-output-hk/testgen-hs/releases/download/"$version"/"$target"
              unzip "$target"
              ./testgen-hs/testgen-hs.exe --version
              ;;
          esac
      - name: Test
        run: cargo test --verbose
        timeout-minutes: 10
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Lint with Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Package binaries
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.upload_artifacts == 'true'
        run: |
          mkdir -p artifacts
          cp target/release/blockfrost-platform* artifacts/
      - name: Upload artifacts
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.upload_artifacts == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binary
          path: artifacts/
