services:
  init-node:
    image: ghcr.io/input-output-hk/mithril-client:2442.0-0d4d6bc
    entrypoint: /app/bin/entrypoint.sh
    user: "${UID}:${GID}"
    environment:
      NETWORK: $NETWORK
      UNPACK_DIR: /data
    volumes:
      - ./nix/mithril-entrypoint.sh:/app/bin/entrypoint.sh
      - node-db:/data

  cardano-node:
    image: ghcr.io/intersectmbo/cardano-node:9.2.0
    environment:
      - NETWORK=$NETWORK
    volumes:
      - node-db:/data
      - node-ipc:/ipc
    restart: on-failure
    depends_on:
      init-node:
        condition: service_completed_successfully

  blockfrost-platform:
    image: ghcr.io/blockfrost/blockfrost-platform:latest
    build:
      context: ./
      target: runtime
    develop:
      watch:
        - action: rebuild
          path: .
    init: true
    restart: on-failure
    ports:
      - 3000:3000
    profiles: ['']
    volumes:
      - node-ipc:/ipc
    entrypoint:
      - /app/blockfrost-platform
      - --network
      - $NETWORK
      - --secret
      - $SECRET
      - --reward-address
      - $REWARD_ADDRESS
      - --node-socket-path
      - /ipc/node.socket

  blockfrost-platform-solitary:
    image: ghcr.io/blockfrost/blockfrost-platform:latest
    build:
      context: ./
      target: runtime
    develop:
      watch:
        - action: rebuild
          path: .
    init: true
    restart: on-failure
    ports:
      - 3000:3000
    volumes:
      - node-ipc:/ipc
    profiles: [solitary]
    entrypoint:
      - /app/blockfrost-platform
      - --network
      - $NETWORK
      - --solitary
      - --node-socket-path
      - /ipc/node.socket
volumes:
  node-db:
  node-ipc:
